-- Cleaning Data in SQL queries

SELECT  
    *
FROM 
    PortfolioProject.dbo.NashvilleHousing 

-- Standardized Date Format

SELECT  
    SaleDate, CONVERT(date,SaleDate)
FROM 
    PortfolioProject.dbo.NashvilleHousing 

UPDATE PortfolioProject.dbo.NashvilleHousing
    SET Saledate = CONVERT(date,SaleDate)

-- Method 2 **
ALTER TABLE NashvilleHousing
    ADD SaleDateConverted Date;

UPDATE NashvilleHousing
    SET SaleDateConverted = CONVERT(date,SaleDate)

-- Populate Property Address data

SELECT  
    *
FROM 
    PortfolioProject.dbo.NashvilleHousing 
-- WHERE PropertyAddress is null
ORDER BY ParcelID

SELECT 
    a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress,
    ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM
    PortfolioProject.dbo.NashvilleHousing a  
JOIN
    PortfolioProject.dbo.NashvilleHousing b  
    ON a.ParcelID = b.ParcelID
    AND a.UniqueID <> b.UniqueID
WHERE 
    a.PropertyAddress is null 

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM
    PortfolioProject.dbo.NashvilleHousing a  
JOIN
    PortfolioProject.dbo.NashvilleHousing b  
    ON a.ParcelID = b.ParcelID
    AND a.UniqueID <> b.UniqueID
WHERE 
    a.PropertyAddress is null 


-- Breaking out Address into Individual Columns (Address, City, State)

SELECT  
    PropertyAddress
FROM 
    PortfolioProject.dbo.NashvilleHousing 

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address,
    SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress)+1, LEN(PropertyAddress))
FROM 
    PortfolioProject.dbo.NashvilleHousing 

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
    ADD PropertySplitAddress NVARCHAR(255);

UPDATE PortfolioProject.dbo.NashvilleHousing
    SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
    ADD PropertySplitCity NVARCHAR(50);

UPDATE PortfolioProject.dbo.NashvilleHousing
    SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress)+1, LEN(PropertyAddress))



-- Owner Address

SELECT  
    OwnerAddress
FROM 
    PortfolioProject.dbo.NashvilleHousing 

SELECT
    PARSENAME(REPLACE(OwnerAddress, ',', '.'),3),
    PARSENAME(REPLACE(OwnerAddress, ',', '.'),2),
    PARSENAME(REPLACE(OwnerAddress, ',', '.'),1)

FROM 
    PortfolioProject.dbo.NashvilleHousing 

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
 ADD OwnerSplitAddress NVARCHAR(255);

 UPDATE PortfolioProject.dbo.NashvilleHousing
    SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'),3)



ALTER TABLE PortfolioProject.dbo.NashvilleHousing
    ADD OwnerSplitCity NVARCHAR(255);

UPDATE PortfolioProject.dbo.NashvilleHousing
    SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'),2)



ALTER TABLE PortfolioProject.dbo.NashvilleHousing
    ADD OwnerSplitState NVARCHAR(255);

UPDATE PortfolioProject.dbo.NashvilleHousing
    SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.'),1)


-- Change Y and N in "Sold as Vacanct" field

SELECT
    DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM 
    PortfolioProject.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2


SELECT
    SoldAsVacant,
        CASE when SoldAsVacant = 'Y' THEN 'Yes'
             WHEN SoldAsVacant = 'N' THEN 'No'
             ELSE SoldAsVacant
             END 
FROM  
    PortfolioProject.dbo.NashvilleHousing

UPDATE PortfolioProject.dbo.NashvilleHousing
SET SoldAsVacant = CASE when SoldAsVacant = 'Y' THEN 'Yes'
             WHEN SoldAsVacant = 'N' THEN 'No'
             ELSE SoldAsVacant
             END 


-- Remove Duplicates 
        -- Usually Done in Temp Table**


WITH RowNumCTE AS(
SELECT
    *,
    ROW_NUMBER() OVER (
        PARTITION BY ParcelID,
        PropertyAddress,
        SalePrice,
        SaleDate,
        LegalReference
        ORDER BY  
            UniqueID 
    ) row_num

FROM 
    PortfolioProject.dbo.NashvilleHousing
)
DELETE 
FROM RowNumCTE
WHERE row_num > 1


-- Delete Unused Columns
-- Usually used for Views

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, PropertyAddress, TaxDistrict

SELECT *
FROM PortfolioProject.dbo.NashvilleHousing


